{"version":3,"sources":["app.module.scss","../../src/contexts/withSlots.tsx","../../src/components/Template.tsx","../../src/contexts/TemplateContext.ts","../../src/components/Slot.tsx","components/Modal.tsx","App.tsx","index.tsx","components/modal.module.scss"],"names":["module","exports","Component","Template","children","React","TemplateContext","Slot","name","slots","useContext","console","content","item","withSlots","className","styles","modal","useState","data","setData","components","Array","templates","useMemo","template","defaultTemplate","useEffect","slot","value","App","Prism","highlightAll","main","code","target","href","ReactDOM","render","document","getElementById"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,KAAO,oB,2CCW/CC,E,gDCLUC,EAAW,SAAC,G,IAAEC,aACzB,OAAOC,wCAAP,ICDWC,EAAkBD,wBAAxB,MCEME,EAAO,SAAC,G,QAAEC,gBAAOA,EAAA,YAAWJ,aACjCK,EAAQC,qBAAd,GAEA,OAAID,GACFE,8DAGF,IAAMC,EAAO,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAA,MAAY,mBAAUD,IAASK,EAAnB,QAE5B,OAAOD,eAAO,IAAPA,UACLP,wCAAiBO,EADZA,MAGLP,wCAHF,I,8CCGaS,GJTZZ,EIPW,WACZ,OACE,6BAASa,UAAWC,IAAOC,OACzB,gCACE,kBAAC,EAAD,CAAMT,KAAK,YAEb,iCACE,kBAAC,EAAD,OAEF,gCACE,kBAAC,EAAD,CAAMA,KAAK,UAAX,6BJFN,Y,IAAGJ,aACD,EAAwBc,mBAAxB,IAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAaC,mBAAqC,CAAxD,GAEMC,EAAYC,mBAChB,kBACEH,EAAA,QACE,2BACE,OAAAI,QAAQ,IAARA,GAAA,UAAAA,EAAA,mCAAyBtB,EAAzB,MADF,aAEE,OAAAsB,QAAQ,IAARA,GAAA,UAAAA,EAAA,uCAEN,CAPF,IAUMC,EAAkBF,mBACtB,kBACEH,EAAA,QACE,6BACE,OAAAI,QAAQ,IAARA,GAAA,UAAAA,EAAA,mCAAyBtB,EAAzB,OACC,OAAAsB,QAAQ,IAARA,GAAA,UAAAA,EAAA,mCAAyBtB,EAAzB,MAFH,aAGI,OAAAsB,QAAQ,IAARA,GAAA,UAAAA,EAAA,uCAER,CARF,IAyCA,OA9BAE,qBAAU,WAYR,OAXAP,EAAQ,CACN,CACEZ,KADF,UAEEoB,KAAMF,IAHH,OAKFH,EAAA,KAAc,kBAAe,CAC9Bf,KAAMiB,QADwB,KAE9BG,KAAMH,QAAerB,eAIlB,WACLgB,SAED,CAACG,EAfJI,IAiBAA,qBAAU,WACJR,GAAQA,EAAZ,QACEA,WAAa,Y,IAAGX,SAEZA,eACCe,EAAA,MAAe,yBAAc,OAAAE,QAAQ,IAARA,GAAA,UAAAA,EAAA,oCAAd,MAEhBd,4DAIL,CAACQ,EAXJQ,IAcE,wBAACrB,EAAD,UAA0BuB,MAAOV,GAC9BjB,GAAaG,0BAFlB,SKcWyB,EA5CH,WAKV,OAJAH,qBAAU,WACRI,IAAMC,iBACL,IAGD,6BAASjB,UAAWC,IAAOiB,MACzB,2CACA,oLAIA,yDAC6B,sCAD7B,6CAIA,yBAAKlB,UAAWC,IAAOkB,MACrB,0BAAMnB,UAAU,gBAzBN,yJA4BZ,8CACkB,sCADlB,qBAIA,yBAAKA,UAAWC,IAAOkB,MACrB,0BAAMnB,UAAU,gBAtDN,+ZAyDZ,kCACM,qCADN,6HAIA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUa,KAAK,UAAf,kBADF,sBAKA,mEACuC,uBAAGO,OAAO,SAASC,KAAK,kEAAxB,4BADvC,IAC6J,qCAD7J,eCxENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDxC,EAAOC,QAAU,CAAC,MAAQ,uB","file":"static/js/main.b60166fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"app_code__1uGZS\",\"main\":\"app_main__1TM-j\"};","import * as React from 'react';\nimport { Context, TemplateContext } from './TemplateContext';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Template } from '../components/Template';\n\nexport interface Props {\n  children: any;\n}\n\ninterface TemplateProps {}\n\nexport const withSlots =\n  (Component: React.FC<TemplateProps>) =>\n  ({ children }: Props) => {\n    const [data, setData] = useState<Context[]>([]);\n\n    const components = Array.isArray(children) ? children : [children];\n\n    const templates = useMemo(\n      () =>\n        components.filter(\n          (template) =>\n            template?.type?.name === Template.name &&\n            template?.props?.slot !== 'default',\n        ),\n      [components],\n    );\n\n    const defaultTemplate = useMemo(\n      () =>\n        components.filter(\n          (template) =>\n            template?.type?.name !== Template.name ||\n            (template?.type?.name === Template.name &&\n              template?.props?.slot === 'default'),\n        ),\n      [components],\n    );\n\n    useEffect(() => {\n      setData([\n        {\n          name: 'default',\n          slot: defaultTemplate,\n        },\n        ...templates.map((template) => ({\n          name: template.props.slot,\n          slot: template.props.children,\n        })),\n      ]);\n\n      return () => {\n        setData([]);\n      };\n    }, [templates, defaultTemplate]);\n\n    useEffect(() => {\n      if (data && data.length) {\n        data.forEach(({ name }) => {\n          if (\n            name !== 'default' &&\n            !templates.find((template) => template?.props?.slot === name)\n          ) {\n            console.warn(`slot with name '${name}' does not exist.`);\n          }\n        });\n      }\n    }, [data, templates]);\n\n    return (\n      <TemplateContext.Provider value={data}>\n        {Component && <Component />}\n      </TemplateContext.Provider>\n    );\n  };\n","import * as React from 'react';\n\ninterface Props {\n  slot: string;\n  children: React.ReactChild | React.ReactChild[];\n}\n\nexport const Template = ({ children }: Props) => {\n  return <React.Fragment>{children}</React.Fragment>;\n};\n","import * as React from 'react';\n\nexport interface Context {\n  name: string;\n  slot: React.ReactChild | React.ReactChild[] | null;\n}\n\nexport const TemplateContext = React.createContext<Context[] | null>(null);\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { TemplateContext } from '../contexts/TemplateContext';\n\ninterface Props {\n  name?: string;\n  children?: React.ReactChild | React.ReactChild[];\n}\n\nexport const Slot = ({ name = 'default', children }: Props) => {\n  const slots = useContext(TemplateContext);\n\n  if (slots === null) {\n    console.warn('use `withSlots` for the component with `Slot`');\n  }\n\n  const content = slots?.find((item) => name === item.name);\n\n  return content?.slot ? (\n    <React.Fragment>{content.slot}</React.Fragment>\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Slot, withSlots } from '@notprometey/react-slots';\n\nimport styles from './modal.module.scss';\n\nconst Modal = () => {\n  return (\n    <section className={styles.modal}>\n      <header>\n        <Slot name='header' />\n      </header>\n      <section>\n        <Slot />\n      </section>\n      <footer>\n        <Slot name='footer'>Default footer content</Slot>\n      </footer>\n    </section>\n  );\n};\n\nexport default withSlots(Modal);\n","import React, { useEffect } from 'react';\nimport Prism from 'prismjs';\nimport { Template } from '@notprometey/react-slots';\n\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport styles from './app.module.scss';\n\nimport Modal from './components/Modal';\n\nconst modalExample = `import { Slot, withSlots } from '@notprometey/react-slots';\n\nconst Modal = () => {\n  return (\n    <section className={styles.modal}>\n      <header>\n        <Slot name='header' />\n      </header>\n      <section>\n        <Slot />\n      </section>\n      <footer>\n        <Slot name='footer'>Default footer content</Slot>\n      </footer>\n    </section>\n  );\n};\n\nexport default withSlots(Modal);\n`;\n\nconst usageExample = `import { Template } from '@notprometey/react-slots';\n\n<Modal>\n  <Template slot='header'>Header content</Template>\n  modal content data\n</Modal>\\\n`;\n\nconst App = () => {\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n\n  return (\n    <section className={styles.main}>\n      <h1>React slots</h1>\n      <p>\n        In some cases, we may want to pass a template fragment to a child component, and let the child component render the fragment within its own template.\n      </p>\n\n      <p>\n        For example, we may have a <b>{`<Modal>`}</b> component that supports usage like this:\n      </p>\n\n      <pre className={styles.code}>\n        <code className='language-jsx'>{usageExample}</code>\n      </pre>\n\n      <p>\n        The template of <b>{`<Modal>`}</b> looks like this:\n      </p>\n\n      <pre className={styles.code}>\n        <code className='language-jsx'>{modalExample}</code>\n      </pre>\n\n      <p>\n        The <b>{`<Slot>`}</b> elements are a slots outlet that indicates where the parent-provided slot content should be rendered, like this example:\n      </p>\n\n      <Modal>\n        <Template slot='header'>Header content</Template>\n        modal content data\n      </Modal>\n\n      <p>\n        React slots mechanism is inspired by <a target='_blank' href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot'>the native Web Component</a> <b>{`<slot>`}</b> element.\n      </p>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1-2Ll\"};"],"sourceRoot":""}